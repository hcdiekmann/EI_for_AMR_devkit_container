version: '3.9'
# To execute this docker-compose yml file use command:
##   docker-compose -f <file_name> up [--build] [--no-start] [--no-build] [--force-recreate / --no-recreate] [--detach]
# For more info about options: docker-compose up --help


# Note: static_transform_publisher parameters needs a re-adjustment based on Robot in use.
# Note: Realsense serial-no needs to be the same in use that is at the front of the robot. Use realsense-viewer to figure out correct serial number.

services:
  # ros-base-rviz2:
  #   image: ${REPO_URL}amr-ros-base:${DOCKER_TAG:-latest}
  #   container_name: ${CONTAINER_NAME_PREFIX:-amr-}ros-base-rviz2
  #   extends:
  #     file:  ../common/container-launch-env.yml
  #     service: container-launch-env
  #   build:
  #     target: ros-base
  #   command:
  #     - |
  #       export ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
  #       ros2 run rviz2 rviz2


  aaeon-amr-interface:
    image: ${REPO_URL}amr-aaeon-amr-interface:${DOCKER_TAG:-latest}
    container_name: ${CONTAINER_NAME_PREFIX:-amr-}aaeon-amr-interface
    extends:
      file:  ../common/container-launch-env.yml
      service: container-launch-env
    build:
      target: aaeon-amr-interface
    command:
      - |
        export ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
        ros2 run ros2_amr_interface amr_interface_node  --ros-args --params-file ${CONTAINER_BASE_PATH}/01_docker_sdk_env/artifacts/01_amr/amr_generic/param/aaeon_node_params.yaml --remap /amr/battery:=/sensors/battery_state


  ros-base-teleop:
    image: ${REPO_URL}amr-ros-base:${DOCKER_TAG:-latest}
    container_name: ${CONTAINER_NAME_PREFIX:-amr-}ros-base-teleop
    extends:
      file:  ../common/container-launch-env.yml
      service: container-launch-env
    build:
      target: ros-base
    command:
      - |
        export ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
        ros2 run joy_linux joy_linux_node &
        ros2 run twist_mux twist_mux --ros-args --remap cmd_vel_out:=/amr/cmd_vel --params-file ${CONTAINER_BASE_PATH}/01_docker_sdk_env/artifacts/01_amr/amr_generic/config/twist_mux_topics.yaml &
        ros2 run teleop_twist_joy teleop_node --ros-args --remap cmd_vel:=/joy_vel --ros-args --params-file ${CONTAINER_BASE_PATH}/01_docker_sdk_env/artifacts/01_amr/amr_generic/config/joy.config.yaml


  imu-madgwick-filter:
    image: ${REPO_URL}amr-imu-tools:${DOCKER_TAG:-latest}
    container_name: ${CONTAINER_NAME_PREFIX:-amr-}imu-madgwick-filter
    extends:
      file:  ../common/container-launch-env.yml
      service: container-launch-env
    build:
      target: imu-tools
    command:
      - |
        export ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
        ros2 run tf2_ros static_transform_publisher -0.07 0 0 0 0 3.14 base_link imu_link --ros-args -p use_sim_time:=false &
        ros2 run imu_filter_madgwick imu_filter_madgwick_node --ros-args -p remove_gravity_vector:=true -p use_mag:=false -p publish_tf:=false --remap /imu/data_raw:=/amr/imu/raw 


  robot-localization:
    image: ${REPO_URL}amr-robot-localization:${DOCKER_TAG:-latest}
    container_name: ${CONTAINER_NAME_PREFIX:-amr-}robot-localization
    extends:
      file:  ../common/container-launch-env.yml
      service: container-launch-env
    build:
      target: robot-localization
    command:
      - |
        export ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
        sleep 5
        ros2 param set /AMR_node publishTF false
        ros2 run robot_localization ukf_node --ros-args --params-file ${CONTAINER_BASE_PATH}/01_docker_sdk_env/artifacts/01_amr/amr_generic/config/ukf_config.yaml


  realsense:
    image: ${REPO_URL}amr-realsense:${DOCKER_TAG:-latest}
    container_name: ${CONTAINER_NAME_PREFIX:-amr-}realsense
    extends:
      file:  ../common/container-launch-env.yml
      service: container-launch-env
    build:
      target: realsense
    command:
      - |
        export ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
        ros2 launch realsense2_camera rs_launch.py align_depth:=true depth_module.profile:='848,480,15' rgb_camera.profile:='848,480,15' enable_infra1:=true align_depth.enable:=true  enable_sync:=true initial_reset:=true &
        ros2 run depthimage_to_laserscan depthimage_to_laserscan_node --remap  depth:=/camera/depth/image_rect_raw --remap depth_camera_info:=/camera/depth/camera_info --ros-args -p scan_time:=0.033 -p range_min:=0.1 -p range_max:=2.5 -p output_frame:=camera_depth_frame


  ros-base-camera-tf:
    image: ${REPO_URL}amr-ros-base:${DOCKER_TAG:-latest}
    container_name: ${CONTAINER_NAME_PREFIX:-amr-}ros-base-camera-tf
    extends:
      file:  ../common/container-launch-env.yml
      service: container-launch-env
    build:
      target: ros-base
    command:
      - |
        export ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
        ros2 run tf2_ros static_transform_publisher 0.09 0 0.16 0 0 0 base_link camera_link --ros-args -p use_sim_time:=false 


  collab-slam:
    image: ${REPO_URL}amr-collab-slam:${DOCKER_TAG:-latest}
    container_name: ${CONTAINER_NAME_PREFIX:-amr-}collab-slam
    extends:
      file:  ../common/container-launch-env.yml
      service: container-launch-env
    build:
      target: collab-slam
    depends_on:
      - ros-base-camera-tf
      - realsense
    command:
      - |
        export ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
        sleep 10
        ros2 launch univloc_tracker collab_slam_nav.launch.py vocabulary:=/home/eiforamr/workspace/CollabSLAM/prebuilt_collab_slam_core/univloc_tracker/share/univloc_tracker/config/orb_vocab.dbow2 use_odom:=true server_rviz:=false enable_fast_mapping:=true projection_min:=0.2 zmin:=0.15


  nav2:
    image: ${REPO_URL}amr-nav2:${DOCKER_TAG:-latest}
    container_name: ${CONTAINER_NAME_PREFIX:-amr-}nav2
    extends:
      file:  ../common/container-launch-env.yml
      service: container-launch-env
    build:
      target: nav2
    depends_on:
      - ros-base-camera-tf
    command:
      - |
        export ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
        sleep 30
        ros2 launch /home/eiforamr/ros2_ws/install/nav2_bringup/share/nav2_bringup/launch/navigation_launch.py use_sim_time:=false params_file:=${CONTAINER_BASE_PATH}/01_docker_sdk_env/artifacts/01_amr/amr_generic/param/aaeon_nav.param.yaml


  wandering:
    image: ${REPO_URL}amr-wandering:${DOCKER_TAG:-latest}
    container_name: ${CONTAINER_NAME_PREFIX:-amr-}wandering
    extends:
      file:  ../common/container-launch-env.yml
      service: container-launch-env
    build:
      target: wandering
    depends_on:
      - ros-base-camera-tf
      - realsense
      - nav2
      - collab-slam
    command:
      - |
        source source_prebuilt_components.sh
        export ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
        sleep 35
        ros2 run wandering_app wandering --ros-args -p use_sim_time:=false


  # aaeon-inference:
  #   image: ${REPO_URL}amr-aaeon-inference:${DOCKER_TAG:-latest}
  #   container_name: ${CONTAINER_NAME_PREFIX:-amr-}aaeon-inference
  #   extends:
  #     file:  ../common/container-launch-env.yml
  #     service: container-launch-env
  #   build:
  #     target: aaeon-inference
  #   command:
  #     - |
  #       ros2 run devkit_object_detection detection_node

    
  dashboards:
    image: ${REPO_URL}amr-dashboards:${DOCKER_TAG:-latest}
    container_name: ${CONTAINER_NAME_PREFIX:-amr-}dashboards
    extends:
      file:  ../common/container-launch-env.yml
      service: container-launch-env
    build:
      target: dashboards
    command:
      - |
        ros2 launch rosbridge_server rosbridge_websocket_launch.xml

